{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Detail(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params = route.params,\n      name = _route$params.name,\n      id = _route$params.id;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      pokemon = _useState2[0],\n      setPokemon = _useState2[1];\n\n  var FetchPokemon = function FetchPokemon() {\n    fetch(\"https://pokeapi.co/api/v2/pokemon/\" + name).then(function (response) {\n      return response.json();\n    }).then(function (data) {\n      console.log(data);\n      setPokemon(data);\n    });\n  };\n\n  useEffect(function () {\n    FetchPokemon();\n  }, []);\n\n  var LoadImg = function LoadImg() {\n    var img;\n\n    try {\n      img = require(\"../img/pokemon/\" + id + \".png\");\n    } catch (e) {\n      img = require(\"../img/No-Image.png\");\n    }\n\n    return img;\n  };\n\n  var ShowTypes = function ShowTypes() {\n    if (pokemon == null) {\n      return _jsx(_Fragment, {});\n    } else {\n      return pokemon.types.map(function (element, index) {\n        return _jsx(Text, {\n          children: element.type.name\n        }, index);\n      });\n    }\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(Image, {\n      source: LoadImg(),\n      style: {\n        width: 150,\n        height: 150\n      }\n    }), _jsx(Text, {\n      children: name\n    }), ShowTypes()]\n  });\n}","map":{"version":3,"names":["React","useState","useEffect","Detail","route","navigation","params","name","id","pokemon","setPokemon","FetchPokemon","fetch","then","response","json","data","console","log","LoadImg","img","require","e","ShowTypes","types","map","element","index","type","width","height"],"sources":["C:/Users/aluno/Desktop/LucianoSilva/pokemon/assets/src/pages/Detail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { View, Text, Image } from 'react-native';\r\n\r\nexport default function Detail({ route, navigation }) {\r\n\r\n    const { name, id } = route.params;\r\n    const [pokemon, setPokemon] = useState(null);\r\n\r\n\r\n    const FetchPokemon = () => {\r\n        fetch(`https://pokeapi.co/api/v2/pokemon/${name}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log(data);\r\n                setPokemon(data);\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        FetchPokemon();\r\n    }\r\n        , []);\r\n\r\n\r\n    const LoadImg = () => {\r\n        let img;\r\n        try {\r\n            img = require(`../img/pokemon/${id}.png`);\r\n        } catch (e) {\r\n            img = require(`../img/No-Image.png`);\r\n        }\r\n        return img;\r\n    }\r\n\r\n\r\n    const ShowTypes = () => {\r\n\r\n        if (pokemon == null) {\r\n            return <></>\r\n        } else {\r\n            return pokemon.types.map((element, index) => {\r\n                return (\r\n                    <Text key={index}>{element.type.name}</Text>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <Image\r\n                source={LoadImg()}\r\n                style={{ width: 150, height: 150 }} />\r\n            <Text>{name}</Text>\r\n            {\r\n                ShowTypes()\r\n            }\r\n        </View>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;;;;AAGA,eAAe,SAASC,MAAT,OAAuC;EAAA,IAArBC,KAAqB,QAArBA,KAAqB;EAAA,IAAdC,UAAc,QAAdA,UAAc;EAElD,oBAAqBD,KAAK,CAACE,MAA3B;EAAA,IAAQC,IAAR,iBAAQA,IAAR;EAAA,IAAcC,EAAd,iBAAcA,EAAd;;EACA,gBAA8BP,QAAQ,CAAC,IAAD,CAAtC;EAAA;EAAA,IAAOQ,OAAP;EAAA,IAAgBC,UAAhB;;EAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;IACvBC,KAAK,wCAAsCL,IAAtC,CAAL,CACKM,IADL,CACU,UAAAC,QAAQ;MAAA,OAAIA,QAAQ,CAACC,IAAT,EAAJ;IAAA,CADlB,EAEKF,IAFL,CAEU,UAAAG,IAAI,EAAI;MACVC,OAAO,CAACC,GAAR,CAAYF,IAAZ;MACAN,UAAU,CAACM,IAAD,CAAV;IACH,CALL;EAMH,CAPD;;EASAd,SAAS,CAAC,YAAM;IACZS,YAAY;EACf,CAFQ,EAGH,EAHG,CAAT;;EAMA,IAAMQ,OAAO,GAAG,SAAVA,OAAU,GAAM;IAClB,IAAIC,GAAJ;;IACA,IAAI;MACAA,GAAG,GAAGC,OAAO,qBAAmBb,EAAnB,UAAb;IACH,CAFD,CAEE,OAAOc,CAAP,EAAU;MACRF,GAAG,GAAGC,OAAO,uBAAb;IACH;;IACD,OAAOD,GAAP;EACH,CARD;;EAWA,IAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;IAEpB,IAAId,OAAO,IAAI,IAAf,EAAqB;MACjB,OAAO,mBAAP;IACH,CAFD,MAEO;MACH,OAAOA,OAAO,CAACe,KAAR,CAAcC,GAAd,CAAkB,UAACC,OAAD,EAAUC,KAAV,EAAoB;QACzC,OACI,KAAC,IAAD;UAAA,UAAmBD,OAAO,CAACE,IAAR,CAAarB;QAAhC,GAAWoB,KAAX,CADJ;MAGH,CAJM,CAAP;IAKH;EACJ,CAXD;;EAaA,OACI,MAAC,IAAD;IAAA,WACI,KAAC,KAAD;MACI,MAAM,EAAER,OAAO,EADnB;MAEI,KAAK,EAAE;QAAEU,KAAK,EAAE,GAAT;QAAcC,MAAM,EAAE;MAAtB;IAFX,EADJ,EAII,KAAC,IAAD;MAAA,UAAOvB;IAAP,EAJJ,EAMQgB,SAAS,EANjB;EAAA,EADJ;AAWH"},"metadata":{},"sourceType":"module"}